<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADqEwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgDAAAAa6xYVAAAAu5Q
        TFRF/////v7+/f393d3d0dHR4uLi/Pz8wcHBa2trS0tLRUVFSkpKdHR019fXtLS0QUFBQEBAR0dHQ0ND
        Ozs7TExMysrK/fz94eHhTk5ORERESEhIPz8/YGBg8vLyn5+fv7+/gYGBPT09SUlJo6Ojfn5+nZ2df39/
        oKCg/v/++/v7+Pj49vb29PT09/f3+vr68fHx2travLu8oqKiioqKfHx8cnJyZ2dnY2NjYmJiaGhocXFx
        fX19jY2NpKSkvr6+2NjYq6urXV1dPDw8QkJCPj4+Xl5erKys29vb5OTkqKioq6qr6Ojo09PTh4eHUFBQ
        RkZGVFRUjo6O2tnagoKC39/fmZmZ+/r7ycnJYWFhOjo6ampq0tHS7u7ue3t7hISE9fX14+Pjb29v5+fn
        3NzcWVlZZGRklpaWtbW1wMDAt7e3p6enk5OTfXx9UlJSiIiIuLi44ODg+fn5U1NTW1tbbm5us7Oz6urq
        6enpra2tbGxsX19f6+vr+fj5ubm57+/vcHBwUVFRj4+PZmZmsLCw9fT1hYWFvLy8//7/mpqar6+voJ+g
        Pz4/c3NzhoaGeHh4/P38sbGxy8vLZWVlm5ubqamprKuskpKSTU1NOTk5np6ei4uL7e3tlJSU5ubmsbCx
        XFxctra2aWlp8fDxwsLC09LTV1dXjIyMpqaml5eXVlZWVVVVYGFgQkFCeXl50NDQw8LDQUBBdnZ2/v3+
        enl6srKyrq6u8PDwdXV11tbWgoGCT09Px8fHurq6WFhYxsbGh4iHzs7OkZGR5eXl1dXVqqqqmJiYyMjI
        WlpaX2BfxMTEzc3NlZWVPT490tLSw8PD7Ozsenp62dnZ1tXW4uHivb29+vv6bW1t8/PzfH18Pj0+g4OD
        kZCRx8bH/Pv83t7ep6ancXBx1NTU7u3upaWlSklKd3d3+vn6z8/P8/LzT1BPzMzMQD9A6+rr/f79iYiJ
        iYmJkJCQNzc3lJOUvby9+Pf4nJycxcXFu7u7R0ZHODg48wXZAQAAAAFvck5UAc+id5oAABCqSURBVHja
        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
        +VhA8pvzix4AAAAASUVORK5CYII=
</value>
  </data>
</root>